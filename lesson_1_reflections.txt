How did viewing a Diff between two versions of a file help you see the bug that was introduced?
It showed a comparison between the old and new version and focussed on the specific area of change instead of displaying the entire code. It allowed appropriate focus to quickly catch and ultimately resolve the code error.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Viewing History means keeping track of not only progress but any mistakes or missteps that happened during the progression and serve as useful hints to avoid paths already taken. In a larger scope, it gives you an idea of where in general your work is headed if you are working on a project with limited knowledge.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, white others, like Google Docs, treat each file separately?
Projects involve dealing with multiple files at the same time. This allows changes to be tracked and backtracked if necessary. Not entirely feasible with Google Docs.

How can you use the commands git log and git diff to view history of files?
Git Log can give the overall history of the commits(as designated by commit IDs) and git doff allows us to compare between each commits to see details level changes.

How might using version control make you more confident to make changes that could break something?
Restoring old code which works can be done instantaneaously for errors small and catastrophic.

Now that you have your workspace set up, what do you want to try using Git for?
For Version control